{"meta":{"title":"Tommywhy's blog","subtitle":"Full stack developer。","description":null,"author":"Tommy Jiang","url":"http://yoursite.com","root":"/"},"pages":[{"title":"about","date":"2019-05-26T08:14:24.000Z","updated":"2019-05-26T08:14:24.000Z","comments":true,"path":"about/index.html","permalink":"http://yoursite.com/about/index.html","excerpt":"","text":""},{"title":"Categories","date":"2019-05-26T07:51:18.000Z","updated":"2019-05-26T08:50:57.000Z","comments":false,"path":"categories/index.html","permalink":"http://yoursite.com/categories/index.html","excerpt":"","text":""},{"title":"tags","date":"2019-05-26T07:55:27.000Z","updated":"2019-05-26T07:56:00.000Z","comments":true,"path":"tags/index.html","permalink":"http://yoursite.com/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"Git","slug":"Git","date":"2019-05-27T08:22:46.000Z","updated":"2019-05-27T11:00:03.000Z","comments":true,"path":"2019/05/27/Git/","link":"","permalink":"http://yoursite.com/2019/05/27/Git/","excerpt":"","text":"废话标题为废话，意思是读者完全可以忽略。闲来无事可以看一下。 开篇想了很久才决定要写什么，作为一名 Web 开发人员，第一必备的技能应该就是 git 了。没什么好说的，记录一些，以备查阅。 git cmd最常用的命令 12345git addgit commitgit statusgit diffgit push git 的状态git init 123456$ git init //这是一个空的仓库Initialized empty Git repository in $ git status // 此时状态为 未跟踪，On branch masterInitial commitUntracked files:xxxx git add123456789修改文件后$ git status // 修改文件在工作区，未提交到 stageOn branch masterChanges not staged for commit: $ git add ./* $ git status // 从工作区 add 到 stage 区xxxxChanges to be committed: git commit123$ git commit -m &quot;xxx&quot;// 从 stage 提交到 master 解决冲突 1234567891011121314151617git diff // 查看不同git log --pretty=onelinegit reset --hard HEAD^ //退回上一个版本 git reset --hard 1094a //退回固定版本git refloggit checkout --xxx //直接丢弃工作区的修改//当你不但改乱了工作区某个文件的内容，还添加到了stage区时(add)，想丢弃修改，分两步，第一步用命令git reset HEAD &lt;file&gt;，就回到了场景1，第二步按场景1操作。git branch dev; git checkout dev ;git checkout -b dev //创建并切换分支git merge dev; git merge --no-ff -m &quot;merge with no-ff&quot; dev // 合并分支， 在master分支下，合并devgit log --graph --pretty=oneline --abbrev-commitgit stash git stash list git stash apply git stash drop git stash popgit remote -v","categories":[],"tags":[]},{"title":"post title","slug":"post-title","date":"2019-05-26T07:38:42.000Z","updated":"2019-05-26T07:38:42.000Z","comments":true,"path":"2019/05/26/post-title/","link":"","permalink":"http://yoursite.com/2019/05/26/post-title/","excerpt":"","text":"","categories":[],"tags":[]},{"title":"Hello World","slug":"hello-world","date":"2019-05-26T01:45:48.000Z","updated":"2019-05-26T01:45:48.000Z","comments":true,"path":"2019/05/26/hello-world/","link":"","permalink":"http://yoursite.com/2019/05/26/hello-world/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[],"tags":[]}]}